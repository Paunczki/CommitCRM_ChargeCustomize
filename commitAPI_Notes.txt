--------------------------------------------------------------------------------------------------
  ___          _                    _               _     _              
 |_ _|  _ _   | |_   _ _   ___   __| |  _  _   __  | |_  (_)  ___   _ _  
  | |  | ' \  |  _| | '_| / _ \ / _` | | || | / _| |  _| | | / _ \ | ' \ 
 |___| |_||_|  \__| |_|   \___/ \__,_|  \_,_| \__|  \__| |_| \___/ |_||_|

Have looked into the API a lot
but to show I have read through it all
I will take notes to make sure I truly understand every possible aspect
http://www.commitcrm.com/wiki/Commit_API_Developers_Guide 

--------------------------------------------------------------------------------------------------
   ___   _                                     
  / __| | |  ___   ___  ___  __ _   _ _   _  _ 
 | (_ | | | / _ \ (_-< (_-< / _` | | '_| | || |
  \___| |_| \___/ /__/ /__/ \__,_| |_|    \_, |
                                          |__/                                      
Web API
    - "The Web API allows you to interact with your CommitCRM server and 
      data over the Web using HTTP"
CommitCRM API 
    - "CommitCRM provides an API which allows you to add and update records in the 
       CommitCRM database. The API includes a list of possible actions and parameters."
ODBC Link (Open Data Base Connectivity)
    - "ODBC is a function library which provides a common API for ODBC compliant databses.
       CommitCRM provides an open database and allows other applications to access the 
       databse using ODBC for read-only purposes."
Record
    - "Each entity in the CommitCRM database (such as Ticket, Account, Asset, Item, 
       Appointment, Task, etc.) is considered a 'record.'"
Database fields
    - "Each record contains a list of fields, each of which holds the record's data."
Transaction
    - "All additions or updates to record in the database are done by using a transaction.
      Each transaction includes the operation you wish to perform, the data type you wish
      to add/update and the additional parameters (databse fields and their values)."
Transaction Parameters
    - "Each transaction contains the parameters for performing the transaction: 
      record type, list of databse fields and a list of the values to be updated in 
      these fields."
External Application
    - "This refers to the external program which integrates with CommitCRM in order to 
      update the database. This name should be passed when performing updates to the 
      database, and it will be saved in the CommitCRM record to indiicated who performed 
      the changes."
Record ID (REC ID)
    - "Each record in the CommitCRMhas a unique Record ID which is created when adding the 
      record to the database. Every ID is 20 characters and should be transferred with the 
      API transaction when you need to update an existing record."

--------------------------------------------------------------------------------------------------
  _   _        _                    ___                         _   _      ___   ___   __  __       _     ___   ___ 
 | | | |  ___ (_)  _ _    __ _     / __|  ___   _ __    _ __   (_) | |_   / __| | _ \ |  \/  |     /_\   | _ \ |_ _|
 | |_| | (_-< | | | ' \  / _` |   | (__  / _ \ | '  \  | '  \  | | |  _| | (__  |   / | |\/| |    / _ \  |  _/  | | 
  \___/  /__/ |_| |_||_| \__, |    \___| \___/ |_|_|_| |_|_|_| |_|  \__|  \___| |_|_\ |_|  |_|   /_/ \_\ |_|   |___|
                         |___/                                                                                      
Workflow
    - Note that the API can return two parameters to the External Application:
        1. The CommitCRM REC ID - when adding new records to the database, this will 
           contains the new record ID
        2. The ExternalTransactionID (relevant for XML transcation only) - In case the 
           external application passes a parameter to be returned with the response,
           the ExternalTransactionID will be returned as-is to in the response.
    - The External Application should keep the REC ID which is returned from the API 
      response. This allows you to later update the existing records with new data or 
      add records related to it (such as opening a Ticket under the Account)
    - http://www.commitcrm.com/wiki/File:Flow.gif
Updating existing records
    - The Record ID can be obtained in the following ways:
        1. API Response (as in flow chart linked above) - You can extract the newly 
           created Record ID from the Email Response when adding new records with the 
           API. This requires the developer to process the API responses, and extract 
           the returning REC ID for newly added record
        2. Data Retrieval API - Use the Data Retrieval API functions to find the 
           relevant records (Accounts, Tickets, etc.), and read all information from 
           the database, including the unique Record ID
        3. Manually - from the Account's Notes tab, at the bottom, right-click the REC 
           ID field and copy it
    - Once you have obtained the Record ID you can pass the Record ID as a parameter 
      for the API and update this record

--------------------------------------------------------------------------------------------------
  ___                                                   _                     _     ___   ___ 
 | _ \  _ _   ___   __ _   _ _   __ _   _ __    _ __   (_)  _ _    __ _      /_\   | _ \ |_ _|
 |  _/ | '_| / _ \ / _` | | '_| / _` | | '  \  | '  \  | | | ' \  / _` |    / _ \  |  _/  | | 
 |_|   |_|   \___/ \__, | |_|   \__,_| |_|_|_| |_|_|_| |_| |_||_| \__, |   /_/ \_\ |_|   |___|
                   |___/                                          |___/                       

    - The CommitCRM Programming API povides developers with a set of API functions which 
      can be used in CSharp, VB.NET and C++. The Programming API libraries provide 
      easy-to-use classes and objects which make the development very simple and friendly

--------------------------------------------------------------------------------------------------
  _                       _                        _     ___                                                   _                     _     ___   ___ 
 | |     ___  __ __ __   | |     ___  __ __  ___  | |   | _ \  _ _   ___   __ _   _ _   __ _   _ __    _ __   (_)  _ _    __ _      /_\   | _ \ |_ _|
 | |__  / _ \ \ V  V /   | |__  / -_) \ V / / -_) | |   |  _/ | '_| / _ \ / _` | | '_| / _` | | '  \  | '  \  | | | ' \  / _` |    / _ \  |  _/  | | 
 |____| \___/  \_/\_/    |____| \___|  \_/  \___| |_|   |_|   |_|   \___/ \__, | |_|   \__,_| |_|_|_| |_|_|_| |_| |_||_| \__, |   /_/ \_\ |_|   |___|
                                                                          |___/                                          |___/                       
    - The Low-Level Programming API executes database transactions. The low-level API 
      provides two separate dll programs, one for adding/updating data from the database, 
      and one for retrieving data from the database
    - http://www.commitcrm.com/wiki/API_Reference_Manual#API_Functions 
    - http://www.commitcrm.com/wiki/API_Code_Samples 
Adding and Updating Data
    - Every record added to the system is assigned a unique Record ID (REC ID) which is 
      the database identifier for this record
    - The CommitCRM API allows you to perform the following operations
        1. Add new records - if no Record ID is passed in the transaction, the API 
           assumes that this is a new record, adds it to the system and creates a 
           new Record ID for it
        2. Update existing records - if the record ID is passed in the transaction, 
           and the record exists, the system will update the record with the information 
           in the transaction
        3. Retrieve records - The Data Retrieval API allows you to perform an SQL Query 
           to get a list of record IDs and retrieve the details for a single record 
           according to a REC ID
    - Note that in order to retrience data using ODBC, use the ODBC Link, which provides 
      a read-only link for the CommitCRM database
Data Retrieval
    - CommitCRM uses an open database and the CommitCRM API provides the ability to 
      retrieve data using standard API functions which let you define queries and 
      retrieve data
    - http://www.commitcrm.com/wiki/Commit_API_Developers_Guide#Data_Retrieval_API

--------------------------------------------------------------------------------------------------
    _     ___   ___     _               ___                  _   _      __ __  __  __  __   _        _                                          _     _               __  
   /_\   | _ \ |_ _|   | |__   _  _    | __|  _ __    __ _  (_) | |    / / \ \/ / |  \/  | | |      | |_   _ _   __ _   _ _    ___  __ _   __  | |_  (_)  ___   _ _   \ \ 
  / _ \  |  _/  | |    | '_ \ | || |   | _|  | '  \  / _` | | | | |   | |   >  <  | |\/| | | |__    |  _| | '_| / _` | | ' \  (_-< / _` | / _| |  _| | | / _ \ | ' \   | |
 /_/ \_\ |_|   |___|   |_.__/  \_, |   |___| |_|_|_| \__,_| |_| |_|   | |  /_/\_\ |_|  |_| |____|    \__| |_|   \__,_| |_||_| /__/ \__,_| \__|  \__| |_| \___/ |_||_|  | |
                               |__/                                    \_\                                                                                            /_/ 
    - The API by Email operates under the Commit Email Connector module, which 
      automatically processes incoming emails arriving at a defined public email address. 
      The Email may contain XML formatted messages which contain API transactions, and 
      provides a full data update API to CommitCRM
    - http://www.commitcrm.com/wiki/API_by_Email_and_MSP_Integration

--------------------------------------------------------------------------------------------------
 __      __        _          _     ___   ___ 
 \ \    / /  ___  | |__      /_\   | _ \ |_ _|
  \ \/\/ /  / -_) | '_ \    / _ \  |  _/  | | 
   \_/\_/   \___| |_.__/   /_/ \_\ |_|   |___|

    - The Web API allows you to build applications or addons which interact with your 
      CommitCRM server remotely over the Web. You can get access to all the API 
      functions and can query the data or add/edit data (or both) giving you 
      unparallelled control over your data
    - http://www.commitcrm.com/wiki/Web_API_Server_Configuration 

--------------------------------------------------------------------------------------------------
  ___           _              ___         _           _                      _       _     ___   ___ 
 |   \   __ _  | |_   __ _    | _ \  ___  | |_   _ _  (_)  ___  __ __  __ _  | |     /_\   | _ \ |_ _|
 | |) | / _` | |  _| / _` |   |   / / -_) |  _| | '_| | | / -_) \ V / / _` | | |    / _ \  |  _/  | | 
 |___/  \__,_|  \__| \__,_|   |_|_\ \___|  \__| |_|   |_| \___|  \_/  \__,_| |_|   /_/ \_\ |_|   |___|
                                                                                                      
    - The Data Retrieval API provides API functions which help you execute database queries 
      and receive the results. Each function uses API functions provided by the Retrieval 
      API dll which is located in the CommitCRM installation. 
    - The Data Retrieval API provides the following bilities
        1. Execute a database query and receive a result records list
        2. Reach each record with its fields 
        Found out field properties
ODBC Data Retrieval
    - CommitCRM uses an open database nad allows other applications to access it using ODBC 
      (Open Data Base Connectivity) for read-only purposes.
    - For
        Installing ODBC Driver - http://www.commitcrm.com/wiki/Commit_API_Developers_Guide#Installing_ODBC_Driver
        Troubleshooting - http://www.commitcrm.com/wiki/Commit_API_Developers_Guide#Troubleshooting 
        Troubleshooting ODBC in 64 Bit Operating Systems - http://www.commitcrm.com/wiki/Commit_API_Developers_Guide#Troubleshooting_ODBC_in_64_Bit_Operating_Systems
        Configuring Data Source in 64-Bit Systems - http://www.commitcrm.com/wiki/Commit_API_Developers_Guide#Configuring_Data_Source_in_64-Bit_Systems

--------------------------------------------------------------------------------------------------
